{"version":3,"sources":["reducer/records_player.js","actions/actionTypes.js","reducer/hold_progress_bar.js","reducer/position_tooltip.js","reducer/record_volume.js","reducer/redio_show_state.js","reducer/clodcast_details.js","reducer/radio_shows_queue.js","reducer/setting_mode.js","reducer/index.js","store/store.js","components/player/audio/context.jsx","components/buttons/button_group.jsx","components/buttons/button.jsx","components/buttons/button_play.jsx","components/buttons/button_pause.jsx","components/buttons/button_seek_back.jsx","components/buttons/button_seek_forward.jsx","components/player/spinner/spinner.jsx","components/player/controls/controls.jsx","components/player/controls/controls_container.jsx","components/player/popper/popper.jsx","components/player/popper/popper_container.jsx","components/player/actions/actions.jsx","components/player/clodcast/clodcast.jsx","components/player/clodcast/clodcast_container.jsx","components/player/time/time.jsx","components/player/progress/progress.jsx","components/player/tooltip/tooltip.jsx","components/player/tooltip/tooltip_container.jsx","components/player/time/time_line.jsx","components/buttons/button_volume_high.jsx","components/buttons/button_volume_low.jsx","components/player/volume/volume.jsx","components/player/volume/volume_container.jsx","components/player/queue-panel/panel.jsx","components/player/queue-panel/head.jsx","components/player/queue-panel/controlPlaying.jsx","components/player/queue-panel/item.jsx","components/player/queue-panel/panel_container.jsx","components/player/queue/queue.jsx","components/player/nextup/next_up.jsx","components/player/nextup/next_up_container.jsx","components/player/player/player.jsx","components/hoc/with_data.jsx","components/player/audio/audio.jsx","components/app/app.jsx","index.js"],"names":["initialState","nowPlaying","progress","duration","load","recordsPlayerReducer","state","action","type","payload","holding","activeBar","holdProgressBarReducer","translate","barWidth","postionTooltipBarReducer","muteVolume","volume","recordVolumeReducer","playingShowId","radioShowStateReducer","show","author","cover","clodcastDetailsReducer","dataQueue","isOpenQueue","radioShowsQueueReducer","concat","newData","filter","item","id","isOpen","changeMode","settingModeReducer","rootReducer","combineReducers","recordsPlayer","radioShowState","holdProgressBar","positionTooltip","recordVolume","clodcastDetails","radioShowsQueue","mode","store","createStore","AudioContext","React","createContext","ButtonGroup","children","className","Button","this","props","Component","PlayBtn","aria-label","onClick","onPlay","disabled","focusable","height","width","viewBox","aria-hidden","fillRule","strokeLinecap","strokeLinejoin","strokeWidth","d","PauseBtn","onPause","SeekBtnBack","data-tooltip","onSeekBack","SeekBtnForward","onSeekForward","Spinner","ControlsView","onSwitchControlPlaying","onPlayerDisabledSeekBack","onPlayerDisabledSeekForward","ControlContainer","handlerSeekForward","onUpdateAudioTime","handlerSeekBack","handlerPlayerDisabledSeekBack","context","audio","currentTime","handlerPlayerDisabledSeekForward","contextType","connect","PopperBody","trim","evt","preventDefault","setMode","Popper","setIsOpenPopper","x-placement","style","display","PopperContainer","dispatch","Actions","fill","Clodcast","dir","src","alt","ClodcastContainer","setRadioShowState","playlist","prevProps","setClodcastDetails","getData","Time","time","hour","minute","second","sec","secondTime","min","start","end","remaining","Math","abs","makeTime","floor","getFullTime","ProgressBar","playerParams","onSetProgress","onMouseDown","onMouseUp","onMouseOver","onMouseOut","onMouseMove","progressBar","willChange","step","max","aria-valuemin","aria-valuemax","aria-valuenow","value","onChange","TooltipProgress","transform","TooltipContainer","handlerMouseMove","clientX","target","getBoundingClientRect","left","setPostionTooltipBar","TimeLine","newMouseMoveFunction","handlerMouseOver","setProgressBarActive","handlerMouseOut","handlerMouseDown","setHoldProgressBar","onClearInterval","handlerMouseUp","onUpdateProgress","callback","rest","handlerChenge","VolumeHighBtn","stroke-rinecap","VolumeLowBtn","VolumeBarView","onSetVolume","onVolumeSwitch","VolumeContainer","setVolume","updatetVolume","handerMuteVolume","updateProgressBarVolume","parseInt","handlerMuteVolumeToggle","QueuePanel","QueueHead","onClose","Control","showId","onUpdateShowId","QueueItem","title","setRemoveFromQueue","QueuePanelContainer","getDataQueue","length","map","key","onSwitchQueue","renderThumbVertical","Queue","xmlns","Nextup","switchQueue","NextupContainer","handlerSwitchQueue","setVisibilityPanel","setTheShowToQueue","CSSTransition","in","timeout","classNames","unmountOnExit","Player","onUpdateData","data-theme","data","then","HocApp","handlerSwitchControlPlaying","audioElement","pause","play","loadData","setLoading","updateProgress","setAudioProgress","intervalId","setInterval","handlerPlay","setAudioPlaying","handlerPause","clearInterval","handlerCanPlay","setAudioDuration","setProgress","toFixed","parseFloat","updateAudioCurrentTime","loadSrc","podcast","nextShow","nextPlay","finally","dataItem","Promise","resolve","document","createElement","addEventListener","removeEventListener","a","findIndex","Provider","ReactComponent","HocComponent","App","feed","render","getElementById"],"mappings":"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","file":"static/js/main.b480da88.chunk.js","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  nowPlaying: false,\r\n  progress: 0,\r\n  duration: 0,\r\n  load: false\r\n}\r\n\r\nconst recordsPlayerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_PLAYER_PLAYING:\r\n      return {\r\n        ...state,\r\n        nowPlaying: action.payload\r\n      };\r\n    case actionTypes.SET_PLAYER_PROGRESS:\r\n      return {\r\n        ...state,\r\n        progress: action.payload\r\n      };\r\n    case actionTypes.SET_PLAYER_DURATION:\r\n      return {\r\n        ...state,\r\n        duration: action.payload\r\n      };\r\n    case actionTypes.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        load: !state.load\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default recordsPlayerReducer;","const SET_PLAYER_PLAYING = 'SET_PLAYER_PLAYING';\r\nconst SET_PLAYER_PROGRESS = 'SET_PLAYER_PROGRESS';\r\nconst SET_PLAYER_DURATION = 'SET_PLAYER_DURATION';\r\nconst SET_LOADING = 'SETLOADING';\r\n\r\nconst SET_REDIO_SHOW_STATE = 'SET_TO_PLAYER_STREAM_AUDIO';\r\n\r\nconst SET_PLAYER_PROGRESS_BAR_HOLDING = 'SET_PLAYER_PROGRESS_BAR_HOLDING';\r\nconst SET_PLAYER_ACTIVE_PROGRESS_BAR = 'SET_PLAYER_ACTIVE_PROGRESS_BAR';\r\n\r\nconst SET_PLAYER_VOLUME = 'SET_PLAYER_VOLUME';\r\nconst SET_PLAYER_MUTE_VOLUME = 'SET_PLAYER_MUTE_VOLUME';\r\n\r\nconst SET_PLAYER_POSTION_TOOLTIP_BAR = 'SET_POSTION_TOOLTIP_BAR';\r\n\r\nconst SET_SHOW_NAME_BY_AUTHOR = 'SET_SHOW_NAME_BY_AUTHOR';\r\n\r\nconst SET_PLAYER_QUEUE_SHOW = 'SET_PLAYER_QUEUE_SHOW';\r\nconst SET_VISIBILITY_QUEUE_PANEL = 'SET_VISIBILITY_QUEUE_PANEL';\r\nconst SET_REMOVE_FROM_QUEUE = 'SET_REMOVE_FROM_QUEUE';\r\n\r\nconst SET_TOGGLE_POPPER = 'SET_TOGGLE_POPPER';\r\nconst SET_SETTING_MODE = 'SET_SETTING_MODE';\r\n\r\nexport {\r\n  SET_PLAYER_PLAYING,\r\n  SET_PLAYER_PROGRESS,\r\n  SET_PLAYER_DURATION,\r\n  SET_REDIO_SHOW_STATE,\r\n  SET_PLAYER_PROGRESS_BAR_HOLDING,\r\n  SET_PLAYER_ACTIVE_PROGRESS_BAR,\r\n  SET_PLAYER_VOLUME,\r\n  SET_PLAYER_MUTE_VOLUME,\r\n  SET_PLAYER_POSTION_TOOLTIP_BAR,\r\n  SET_SHOW_NAME_BY_AUTHOR,\r\n  SET_PLAYER_QUEUE_SHOW,\r\n  SET_VISIBILITY_QUEUE_PANEL,\r\n  SET_REMOVE_FROM_QUEUE,\r\n  SET_TOGGLE_POPPER,\r\n  SET_SETTING_MODE,\r\n  SET_LOADING\r\n};","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  holding: false,\r\n  activeBar: false\r\n}\r\n\r\nconst holdProgressBarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_PLAYER_PROGRESS_BAR_HOLDING:\r\n      return {\r\n        ...state,\r\n        holding: !state.holding\r\n      };\r\n    case actionTypes.SET_PLAYER_ACTIVE_PROGRESS_BAR:\r\n      return {\r\n        ...state,\r\n        activeBar: !state.activeBar\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default holdProgressBarReducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  translate: 0,\r\n  barWidth: 0\r\n}\r\n\r\nconst postionTooltipBarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_PLAYER_POSTION_TOOLTIP_BAR:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postionTooltipBarReducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  muteVolume: 100,\r\n  volume: 1\r\n}\r\n\r\nconst recordVolumeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_PLAYER_VOLUME:\r\n      return {\r\n        ...state,\r\n        volume: action.payload\r\n      };\r\n    case actionTypes.SET_PLAYER_MUTE_VOLUME:\r\n      return {\r\n        ...state,\r\n        muteVolume: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default recordVolumeReducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  playingShowId: null\r\n}\r\n\r\nconst radioShowStateReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_REDIO_SHOW_STATE:\r\n      if (action.payload) {\r\n        return {\r\n          ...state,\r\n          playingShowId: action.payload\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...state\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default radioShowStateReducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  show: null,\r\n  author: null,\r\n  cover: null\r\n}\r\n\r\nconst clodcastDetailsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_SHOW_NAME_BY_AUTHOR:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default clodcastDetailsReducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  dataQueue: [],\r\n  isOpenQueue: false\r\n}\r\n\r\nconst radioShowsQueueReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_PLAYER_QUEUE_SHOW:\r\n      return {\r\n        ...state,\r\n        dataQueue: state.dataQueue.concat(action.payload)\r\n      };\r\n    case actionTypes.SET_VISIBILITY_QUEUE_PANEL:\r\n      return {\r\n        ...state,\r\n        isOpenQueue: !state.isOpenQueue\r\n      }\r\n    case actionTypes.SET_REMOVE_FROM_QUEUE:\r\n      // eslint-disable-next-line\r\n      const newData = state.dataQueue.filter(item => {\r\n        if (item.id !== action.payload) {\r\n          return item;\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        dataQueue: newData\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default radioShowsQueueReducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n  changeMode: false\r\n}\r\n\r\nconst settingModeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_TOGGLE_POPPER:\r\n      return {\r\n        ...state,\r\n        isOpen: !state.isOpen\r\n      };\r\n    case actionTypes.SET_SETTING_MODE:\r\n      return {\r\n        ...state,\r\n        changeMode: !state.changeMode\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default settingModeReducer;","import { combineReducers } from 'redux';\r\nimport recordsPlayer from './records_player';\r\nimport holdProgressBar from './hold_progress_bar';\r\nimport positionTooltip from './position_tooltip';\r\nimport recordVolume from './record_volume';\r\nimport radioShowState from './redio_show_state';\r\nimport clodcastDetails from './clodcast_details';\r\nimport radioShowsQueue from './radio_shows_queue';\r\nimport mode from './setting_mode';\r\n\r\nconst rootReducer = combineReducers({\r\n  recordsPlayer,\r\n  radioShowState,\r\n  holdProgressBar,\r\n  positionTooltip,\r\n  recordVolume,\r\n  clodcastDetails,\r\n  radioShowsQueue,\r\n  mode\r\n})\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from '../reducer/index';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\r\n\r\nexport const AudioContext = React.createContext();","import React from 'react';\r\n\r\nconst ButtonGroup = ({ children }) => {\r\n  return(\r\n    <div className='player-controls'>\r\n      <ul className='svg-icon-group'>\r\n        { children }\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ButtonGroup;","import React, { Component } from 'react';\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    return(\r\n      <button\r\n        { ...this.props }\r\n      >\r\n        { this.props.children }\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from './button';\r\n\r\nconst PlayBtn = props => {\r\n  return(\r\n    <Button\r\n      className='svg-icon-btn is-highlight' \r\n      type=\"button\"\r\n      aria-label=\"Play\"\r\n      onClick={ props.onPlay }\r\n      disabled={ props.disabled }\r\n    >\r\n      <svg \r\n        className=\"svg-icon svg-icon-play\" \r\n        focusable=\"false\" \r\n        height=\"1em\" width=\"1em\" \r\n        viewBox=\"0 0 12 12\" \r\n        aria-hidden=\"true\"\r\n      >\r\n        <path fillRule=\"evenodd\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\" d=\"M2.5.5v11l9-5.5z\" />\r\n      </svg>\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default PlayBtn;","import React from 'react';\r\nimport Button from './button';\r\n\r\nconst PauseBtn = props => {\r\n  return(\r\n    <Button\r\n      className='svg-icon-btn is-highlight' \r\n      type=\"button\"\r\n      aria-label=\"Pause\"\r\n      onClick={ props.onPause }\r\n      disabled={ props.disabled }\r\n    >\r\n      <svg className=\"svg-icon svg-icon-pause\" focusable=\"false\" height=\"1em\" width=\"1em\" viewBox=\"0 0 12 12\" aria-hidden=\"true\">\r\n        <path d=\"M2.495 0h2.01C4.778 0 5 .224 5 .5v11a.5.5 0 0 1-.495.5h-2.01A.498.498 0 0 1 2 11.5V.5a.5.5 0 0 1 .495-.5zM7 .5a.5.5 0 0 1 .495-.5h2.01c.273 0 .495.224.495.5v11a.5.5 0 0 1-.495.5h-2.01A.498.498 0 0 1 7 11.5V.5z\"/>\r\n      </svg>\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default PauseBtn;","import React from 'react';\r\nimport Button from './button';\r\n\r\nconst SeekBtnBack = props => {\r\n  return(\r\n    <Button\r\n      className='svg-icon-btn seek-button back tooltip'\r\n      type=\"button\"\r\n      data-tooltip=\"Сome back\"\r\n      disabled={ props.disabled }\r\n      onClick={ props.onSeekBack }\r\n    >\r\n      <div className='seek-button-wrapper'>\r\n        <svg className='svg-icon' height=\"20px\" viewBox=\"0 0 512 512.00241\" width=\"20px\">\r\n          <path d=\"m256 .00390625c-62.675781 0-123.605469 23.08203175-171.09375 62.26953175l-57.597656-57.597657c-4.585938-4.566406-11.457032-5.933593-17.429688-3.457031-5.972656 2.472656-9.878906 8.296875-9.878906 14.785156v138.664063c0 8.832031 7.167969 16 16 16h138.667969c6.484375 0 12.308593-3.902344 14.785156-9.875 2.472656-5.972657 1.109375-12.84375-3.480469-17.429688l-50.75-50.773437c39.445313-31.425782 89.363282-49.921875 140.777344-49.921875 117.632812 0 213.335938 95.703125 213.335938 213.335937 0 117.628906-95.703126 213.332032-213.335938 213.332032-56.9375 0-110.503906-22.207032-150.804688-62.527344-8.339843-8.34375-21.824218-8.34375-30.164062 0-8.34375 8.339844-8.34375 21.824218 0 30.164062 48.363281 48.382813 112.640625 75.03125 180.96875 75.03125 141.164062 0 256-114.839844 256-256 0-141.164062-114.835938-255.99999975-256-255.99999975zm0 0\"/>\r\n        </svg>\r\n        <div className='seek-title'>15</div>\r\n      </div>\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default SeekBtnBack;","import React from 'react';\r\nimport Button from './button';\r\n\r\nconst SeekBtnForward = props => {\r\n  return(\r\n    <Button\r\n      className='svg-icon-btn seek-button forward tooltip'\r\n      type=\"button\"\r\n      data-tooltip='Keep tapping to seek faster'\r\n      onClick={ props.onSeekForward }\r\n      disabled={ props.disabled }\r\n    >\r\n      <div className='seek-button-wrapper'>\r\n        <svg className='svg-icon' height=\"20px\" viewBox=\"0 0 512 512\" width=\"20px\">\r\n          <path d=\"m502.121094 1.214844c-5.972656-2.453125-12.863282-1.109375-17.429688 3.476562l-57.597656 57.601563c-47.488281-39.210938-108.417969-62.292969-171.09375-62.292969-141.164062 0-256 114.835938-256 256s114.835938 256 256 256c68.332031 0 132.609375-26.644531 180.96875-75.03125 8.34375-8.339844 8.34375-21.820312 0-30.164062-8.339844-8.339844-21.820312-8.339844-30.164062 0-40.296876 40.320312-93.867188 62.527343-150.804688 62.527343-117.632812 0-213.332031-95.699219-213.332031-213.332031s95.699219-213.332031 213.332031-213.332031c51.414062 0 101.332031 18.496093 140.777344 49.917969l-50.75 50.773437c-4.585938 4.585937-5.929688 11.457031-3.476563 17.429687 2.472657 5.972657 8.296875 9.878907 14.78125 9.878907h138.667969c8.832031 0 16-7.167969 16-16v-138.667969c0-6.484375-3.902344-12.308594-9.878906-14.785156zm0 0\"/>\r\n        </svg>\r\n        <div className='seek-title'>30</div>\r\n      </div>\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default SeekBtnForward;","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Spinner = () => {\r\n  return(\r\n    <div className='spinner'/>\r\n  )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ButtonGroup from '../../buttons/button_group';\r\nimport Play from '../../buttons/button_play';\r\nimport Pause from '../../buttons/button_pause';\r\nimport SeekBack from '../../buttons/button_seek_back';\r\nimport SeekForward from '../../buttons/button_seek_forward';\r\nimport Spinner from '../spinner/spinner';\r\n\r\nconst ControlsView = props => {\r\n  const { \r\n    nowPlaying,\r\n    onSwitchControlPlaying,\r\n    onSeekForward,\r\n    onSeekBack,\r\n    onPlayerDisabledSeekBack,\r\n    onPlayerDisabledSeekForward\r\n  } = props;\r\n\r\n  return(\r\n    <ButtonGroup>\r\n      <li className='svg-icon-group-item'>\r\n        <SeekBack\r\n          disabled={ onPlayerDisabledSeekBack() || props.load }\r\n          onSeekBack={ onSeekBack }\r\n        />\r\n      </li>\r\n      <li className='svg-icon-group-item'>\r\n        { !nowPlaying ? <Play onPlay={ onSwitchControlPlaying } disabled={ props.load } /> : <Pause onPause={ onSwitchControlPlaying } disabled={ props.load } /> }\r\n        { props.load ? <Spinner/> : null }\r\n      </li>\r\n      <li className='svg-icon-group-item'>\r\n        <SeekForward\r\n          onSeekForward={ onSeekForward }\r\n          disabled={ onPlayerDisabledSeekForward() || props.load }\r\n        />\r\n      </li>\r\n    </ButtonGroup>\r\n  )\r\n}\r\n\r\nControlsView.propTypes = {\r\n  nowPlaying: PropTypes.bool,\r\n  onSwitchControlPlaying: PropTypes.func,\r\n  onSeekForward: PropTypes.func,\r\n  onSeekBack: PropTypes.func\r\n}\r\n\r\nexport default ControlsView","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AudioContext } from '../audio/context';\r\nimport Controls from './controls';\r\nimport './style.css';\r\n\r\nclass ControlContainer extends Component {\r\n  static contextType = AudioContext;\r\n\r\n  handlerSeekForward = () => {\r\n    this.props.onUpdateAudioTime(this.props.progress + 30);\r\n  }\r\n\r\n  handlerSeekBack = () => {\r\n    this.props.onUpdateAudioTime(this.props.progress - 15);\r\n  }\r\n\r\n  handlerPlayerDisabledSeekBack = () => {\r\n    const { audio } = this.context;\r\n\r\n    if (audio.currentTime < 15) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  handlerPlayerDisabledSeekForward = () => {\r\n    const { audio } = this.context;\r\n\r\n   if (audio.currentTime === audio.duration) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <Controls\r\n        { ...this.props }\r\n        onSeekForward={ this.handlerSeekForward }\r\n        onSeekBack={ this.handlerSeekBack }\r\n        onPlayerDisabledSeekBack={ this.handlerPlayerDisabledSeekBack }\r\n        onPlayerDisabledSeekForward={ this.handlerPlayerDisabledSeekForward }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ recordsPlayer }) => {\r\n  const { nowPlaying, progress, load } = recordsPlayer;\r\n\r\n  return {\r\n    nowPlaying,\r\n    load,\r\n    progress\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(ControlContainer);","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Popper = props => {\r\n  return(\r\n    <div className=\"popper-wrapper\">\r\n      <button\r\n        className={ `svg-icon-btn ${ props.isOpen ? 'is-active' : 'tooltip' }` }\r\n        type='button'\r\n        aria-label=\"Favorite this show\"\r\n        data-tooltip='View mode'\r\n        onClick={ () => props.setIsOpenPopper() }\r\n      >\r\n        <svg className=\"svg-icon svg-icon-options\" focusable=\"false\" height=\"1em\" width=\"1em\" viewBox=\"0 0 12 12\" aria-hidden=\"true\"><path d=\"M10.5 7.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zM6 7.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm-4.5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z\"/></svg>\r\n      </button>\r\n      <div className=\"popper\" x-placement=\"top\" style={{ display: !props.isOpen ? \"none\" : false }}>\r\n        { props.isOpen ? <PopperBody { ...props } /> : null }\r\n        <div className='popper-arrow'></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst PopperBody = props => {\r\n  return(\r\n    <div className=\"popper-content popper-player-mode\">\r\n      <label className='label-mode'>\r\n        <div className='label-text'>Dark mode</div>\r\n        <div className='label-control'>\r\n          <span\r\n            className={ `input-switch ${ props.changeMode ? 'is-checked' : '' }`.trim() } \r\n            onClick={ evt => {\r\n              evt.preventDefault();\r\n              return props.setMode();\r\n            }}\r\n          >\r\n            <input className='input-control' type=\"chgeckbox\"/>\r\n          </span>\r\n        </div>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Popper;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../../actions/actionTypes';\r\n\r\nimport Popper from './popper';\r\n\r\nclass PopperContainer extends Component {\r\n  render() {\r\n    return(\r\n      <Popper\r\n        { ...this.props }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ mode }) => {\r\n  return {\r\n    ...mode\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setIsOpenPopper: () => dispatch({ type: actionTypes.SET_TOGGLE_POPPER }),\r\n    setMode: () => dispatch({ type: actionTypes.SET_SETTING_MODE })\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps)(PopperContainer);","import React from 'react';\r\nimport Popper from '../popper/popper_container';\r\nimport './style.css';\r\n\r\nconst Actions = () =>  {\r\n\r\n  return(\r\n    <div className='track-actions'>\r\n      <ul className='svg-icon-group'>\r\n        <li className='svg-icon-group-item'>\r\n          <button\r\n            className='svg-icon-btn tooltip'\r\n            type='button'\r\n            aria-label=\"Favorite this show\"\r\n            data-tooltip='Add to favourite'\r\n          >\r\n            <svg className=\"svg-icon svg-icon-love-outline\" focusable=\"false\" height=\"1em\" width=\"1em\" viewBox=\"0 0 12 12\" aria-hidden=\"true\">\r\n              <path className=\"svg-path\" fill=\"none\" strokeWidth=\"1.2\" d=\"M6 10.77a26.815 26.815 0 0 0 2.595-2.087c.996-.913 1.78-1.8 2.267-2.612.356-.594.538-1.124.538-1.571 0-1.734-1.207-2.9-2.65-2.9-.616 0-1.17.229-1.656.619a3.006 3.006 0 0 0-.595.614L6 3.582l-.5-.75a3.006 3.006 0 0 0-.593-.613C4.42 1.829 3.867 1.6 3.25 1.6 1.807 1.6.6 2.766.6 4.5c0 .447.182.977.538 1.571.488.812 1.271 1.699 2.267 2.612A26.815 26.815 0 0 0 6 10.77z\"></path>\r\n            </svg>\r\n          </button>\r\n        </li>\r\n        <li className='svg-icon-group-item'>\r\n          <Popper/>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Actions;","import React from 'react';\r\n\r\nconst Clodcast = props => {\r\n  const { show, author, cover } = props;\r\n\r\n  return(\r\n    <div className='player-cloudcast' dir=\"ltr\">\r\n      <div className=\"player-cloudcast-image\">\r\n        <figure>\r\n          <img src={ cover } alt=\"\"/>\r\n        </figure>\r\n      </div>\r\n      <div className=\"player-cloudcast-details\">\r\n        <div className='player-cloudcast-title'>\r\n          { show }\r\n        </div>\r\n        <div className='player-cloudcast-author'>\r\n          { author }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Clodcast;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../../actions/actionTypes';\r\nimport Cloudcast from './clodcast';\r\nimport './style.css';\r\n\r\nclass ClodcastContainer extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.setRadioShowState(this.props.playlist[0].id);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { playingShowId, setClodcastDetails } = this.props;\r\n\r\n    if (playingShowId !== prevProps.playingShowId) {\r\n      this.props.getData(playingShowId, setClodcastDetails);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Cloudcast\r\n        { ...this.props }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nClodcastContainer.propTypes = {\r\n  nowPlaying: PropTypes.bool,\r\n  playingShowId: PropTypes.string,\r\n  setClodcastDetails: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = ({ clodcastDetails, radioShowState }) => {\r\n  const { playingShowId } = radioShowState;\r\n\r\n  return {\r\n    ...clodcastDetails,\r\n    playingShowId\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setClodcastDetails: payload => dispatch({ type: actionTypes.SET_SHOW_NAME_BY_AUTHOR, payload }),\r\n    setRadioShowState: payload => dispatch({ type: actionTypes.SET_REDIO_SHOW_STATE, payload })\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ClodcastContainer);","import React, { Component } from 'react';\r\n\r\nclass Time extends Component {\r\n  secondTime(time) {\r\n    switch(true) {\r\n      case time === 0:\r\n        return '00';\r\n      case time >= 10:\r\n        return time;\r\n      default:\r\n        return `0${ time }`;\r\n    }\r\n  }\r\n\r\n  makeTime(hour, minute, second) {\r\n    const sec = this.secondTime(second);\r\n    const min = this.secondTime(minute);\r\n\r\n    if (hour === 0) {\r\n      return `${ minute }:${ sec }`;\r\n    }\r\n\r\n    return `${ hour }:${ min }:${ sec }`;\r\n  }\r\n\r\n  getFullTime() {\r\n    const { start, end } = this.props;\r\n    let remaining = !end ? start : Math.abs(start - end);\r\n\r\n    const hour = hour => {\r\n      remaining -= hour * 60 * 60;\r\n      return hour;\r\n    };\r\n    const minute = minute => {\r\n      remaining -= minute * 60;\r\n      return minute;\r\n    };\r\n    const second = () => Math.floor(remaining);\r\n\r\n    return this.makeTime(\r\n      hour(Math.floor(remaining / 3600)),\r\n      minute(Math.floor(remaining / 60)),\r\n      second()\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <span>{ this.getFullTime() }</span>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Time;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Time from '../time/time';\r\nimport './style.css';\r\n\r\nconst ProgressBar = props => {\r\n  const {\r\n    playerParams,\r\n    onSetProgress,\r\n    onMouseDown,\r\n    onMouseUp,\r\n    onMouseOver,\r\n    onMouseOut,\r\n    onMouseMove\r\n  } = props;\r\n  \r\n  const { \r\n    progress, \r\n    duration, \r\n    holding, \r\n    activeBar, \r\n    translate,\r\n    barWidth } = playerParams;\r\n  \r\n    const progressBar = (progress / duration) * 100;\r\n\r\n  return(\r\n    <div className='track-seekbar'>\r\n      <div \r\n        className={ `slider ${ activeBar ? 'is-active' : 'is-inactive' }` }\r\n      >\r\n        <div className='slider-counter slider-counter-current'>\r\n          <Time start={ progress } />\r\n        </div>\r\n        <div \r\n          className='slider-track'\r\n          onMouseOver={ onMouseOver }\r\n          onMouseOut={ onMouseOut }\r\n          onMouseMove={ onMouseMove }\r\n        >\r\n          <div className='slider-track-default'/>\r\n          <div className='slider-track-active' style={{ width:`${ progressBar }%`, willChange:'width' }} />\r\n          <input \r\n            type=\"range\"\r\n            className='slider-track-input mousetrap'\r\n            step='1'\r\n            min='0'\r\n            max={ duration }\r\n            aria-valuemin={ 0 }\r\n            aria-valuemax={ duration }\r\n            aria-valuenow={ progress }\r\n            value={ progress }\r\n            onChange={ () => onSetProgress({holding, translate, barWidth}) }\r\n            onMouseDown={ onMouseDown }\r\n            onMouseUp={ onMouseUp }\r\n            />\r\n        </div>\r\n        <div className='slider-counter slider-counter-max'>\r\n          -\r\n          <Time\r\n            start={ progress }\r\n            end={ duration } \r\n          />\r\n        </div>\r\n        { props.children }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nProgressBar.propTypes = {\r\n  playerParams: PropTypes.object,\r\n  onSetProgress: PropTypes.func,\r\n  onMouseDown: PropTypes.func,\r\n  onMouseUp: PropTypes.func,\r\n  onMouseOver: PropTypes.func,\r\n  onMouseOut: PropTypes.func,\r\n  newMouseMove: PropTypes.func\r\n}\r\n\r\nexport default ProgressBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Time from '../time/time';\r\n\r\nconst TooltipProgress = ({ \r\n  activeBar, \r\n  translate, \r\n  barWidth, \r\n  duration }) => {\r\n    \r\n  if (activeBar) {\r\n    return(\r\n      <div \r\n        className='slider-toltip'\r\n        style={{ \r\n          transform: `translate3d(${ translate }px,0,0)`,\r\n          willChange: 'transform' \r\n        }}\r\n        >\r\n          { <Time start={ (translate / barWidth) * duration } /> }\r\n      </div> \r\n    )\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nTooltipProgress.propTypes = {\r\n  activeBar: PropTypes.bool,\r\n  translate: PropTypes.number,\r\n  barWidth: PropTypes.number,\r\n  duration: PropTypes.number\r\n}\r\n\r\nexport default TooltipProgress;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionType from '../../../actions/actionTypes';\r\n\r\nimport TooltipView from './tooltip';\r\nimport './style.css';\r\n\r\nclass TooltipContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.props.onMouseMove(this.handlerMouseMove);\r\n  }\r\n\r\n  handlerMouseMove = evt => {\r\n    const translate = evt.clientX - evt.target.getBoundingClientRect().left;\r\n    const barWidth = evt.target.getBoundingClientRect().width;\r\n\r\n    if (translate >= 0) {\r\n      this.props.setPostionTooltipBar({\r\n        translate,\r\n        barWidth\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <TooltipView\r\n       { ...this.props }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ holdProgressBar, recordsPlayer, positionTooltip }) => {\r\n  const { duration } = recordsPlayer;\r\n  const { activeBar } = holdProgressBar\r\n\r\n  return {\r\n    activeBar,\r\n    duration,\r\n    ...positionTooltip\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return{\r\n    setPostionTooltipBar: payload => dispatch({ type: actionType.SET_PLAYER_POSTION_TOOLTIP_BAR, payload }) \r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps)(TooltipContainer);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../../actions/actionTypes';\r\nimport { AudioContext } from '../audio/context';\r\n\r\nimport ProgressBar from '../progress/progress';\r\nimport TooltipProgress from '../tooltip/tooltip_container';\r\n\r\nclass TimeLine extends Component {\r\n  static contextType = AudioContext;\r\n\r\n  static propTypes = {\r\n    onSetProgress: PropTypes.func,\r\n    onUpdateProgress: PropTypes.func,\r\n    onClearInterval: PropTypes.func\r\n  }\r\n\r\n  newMouseMoveFunction = null;\r\n\r\n  handlerMouseOver = () => {\r\n    const { setProgressBarActive } = this.props;\r\n\r\n    setProgressBarActive();\r\n  }\r\n\r\n  handlerMouseOut = () => {\r\n    const { setProgressBarActive } = this.props;\r\n\r\n    setProgressBarActive();\r\n  }\r\n\r\n  handlerMouseDown = () => {\r\n    const { setHoldProgressBar, onClearInterval } = this.props;\r\n\r\n    if (!this.props.holding) {\r\n      onClearInterval();\r\n      setHoldProgressBar();\r\n    }\r\n  }\r\n\r\n  handlerMouseUp = () => {\r\n    const { audio } = this.context;\r\n    const { onUpdateProgress, setHoldProgressBar, progress } = this.props;\r\n\r\n    if (this.props.holding) {\r\n      audio.currentTime = progress;\r\n\r\n      onUpdateProgress();\r\n      setHoldProgressBar();\r\n    }\r\n  }\r\n\r\n  handlerMouseMove = callback => {\r\n    this.newMouseMoveFunction = callback;\r\n  }\r\n\r\n  render() {\r\n    const { onSetProgress, ...rest } = this.props;\r\n\r\n    return(\r\n      <ProgressBar\r\n        playerParams={ rest }\r\n        onSetProgress={ onSetProgress }\r\n        onMouseDown={ this.handlerMouseDown }\r\n        onMouseUp={ this.handlerMouseUp }\r\n        onMouseOver={ this.handlerMouseOver }\r\n        onMouseOut={ this.handlerMouseOut }\r\n        onMouseMove={ this.newMouseMoveFunction }\r\n      >\r\n        <TooltipProgress\r\n          onMouseMove={ this.handlerMouseMove }\r\n          onChange={ this.handlerChenge }\r\n        />\r\n      </ProgressBar>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ holdProgressBar, recordsPlayer, positionTooltip }) => {\r\n  const { progress, duration } = recordsPlayer;\r\n\r\n  return {\r\n    ...holdProgressBar,\r\n    ...positionTooltip,\r\n    progress,\r\n    duration,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setHoldProgressBar: () => dispatch({ type: actionTypes.SET_PLAYER_PROGRESS_BAR_HOLDING }),\r\n    setProgressBarActive: () => dispatch({ type: actionTypes.SET_PLAYER_ACTIVE_PROGRESS_BAR })\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  mapDispatchToProps)(TimeLine);","import React from 'react';\r\n\r\nconst VolumeHighBtn = () => {\r\n  return(\r\n    <svg className=\"svg-icon svg-icon-volume\" focusable=\"false\" height=\"1em\" width=\"1em\" viewBox=\"0 0 12 12\" aria-hidden=\"true\">\r\n      <g fillRule=\"evenodd\" stroke-rinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\">\r\n        <path d=\"M3 4.5H.5v3H3l2.5 2v-7z\"/>\r\n        <path fill=\"none\" d=\"M9 2.5c2 1.933 2 5.067 0 7m-1.5-5c.976.829.976 2.171 0 3\"/>\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default VolumeHighBtn;","import React from 'react';\r\n\r\nconst VolumeLowBtn = () => {\r\n  return(\r\n    <svg className=\"svg-icon svg-icon-volume-off\" focusable=\"false\" height=\"1em\" width=\"1em\" viewBox=\"0 0 12 12\" aria-hidden=\"true\">\r\n      <g fill=\"none\" fillRule=\"evenodd\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\">\r\n        <path className=\"svg-fill\" d=\"M3 4.5H.5v3H3l2.5 2v-7z\"/>\r\n        <path d=\"M10.5 4.5l-3 3m0-3l3 3\"/>\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default VolumeLowBtn;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '../../buttons/button';\r\nimport VolumeHigh from '../../buttons/button_volume_high';\r\nimport VolumeLow from '../../buttons/button_volume_low';\r\n\r\nconst VolumeBarView = props => {\r\n  const { volume, onSetVolume, onVolumeSwitch } = props;\r\n\r\n  return(\r\n    <div className='wrapper-volume'>\r\n      <Button\r\n        type='button'\r\n        className='svg-icon-btn'\r\n        onClick={ onVolumeSwitch }\r\n      >\r\n        { volume ? <VolumeHigh /> : <VolumeLow /> }\r\n      </Button>\r\n      <div className='player-valume'>\r\n        <div className='slider'>\r\n          <div className='slider-track'>\r\n            <div className='slider-track-default'></div>\r\n            <div className='slider-track-active' style={{ width: `${ volume }%`, willChange: 'width' }}/>\r\n            <input \r\n              className='slider-track-input mousetrap'\r\n              type=\"range\"\r\n              step='1'\r\n              min='0'\r\n              max='100'\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              aria-valuenow={ volume }\r\n              value={ volume }\r\n              onChange={ onSetVolume }\r\n              />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nVolumeBarView.propTypes = {\r\n  volume: PropTypes.number,\r\n  onChangeValume: PropTypes.func,\r\n  onVolumeSwitch: PropTypes.func\r\n}\r\n\r\nexport default VolumeBarView;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../../actions/actionTypes';\r\nimport { AudioContext } from '../audio/context';\r\nimport VolumeBar from './volume';\r\nimport './style.css';\r\n\r\nclass VolumeContainer extends Component {\r\n  static contextType = AudioContext;\r\n\r\n  static propTypes = {\r\n    volume: PropTypes.number,\r\n    muteVolume: PropTypes.number,\r\n    onSetVolume: PropTypes.func,\r\n    updatetVolume: PropTypes.func,\r\n    updateProgressBarVolume: PropTypes.func\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { volume, updatetVolume } = this.props;\r\n    \r\n    if (!volume && prevProps.volume !== volume) {\r\n      updatetVolume(prevProps.volume);\r\n    }\r\n  }\r\n\r\n  setVolume = volume => {\r\n    const { audio } = this.context;\r\n    \r\n    audio.volume = volume;\r\n    this.props.updatetVolume(volume);\r\n  }\r\n\r\n  handerMuteVolume = evt => {\r\n    const { value } = evt.target;\r\n    let { muteVolume, updateProgressBarVolume } = this.props;\r\n\r\n    // eslint-disable-next-line\r\n    muteVolume = parseInt(value, 10);\r\n\r\n    this.setVolume(muteVolume / 100);\r\n    updateProgressBarVolume(muteVolume);\r\n  }\r\n\r\n  handlerMuteVolumeToggle = () => {\r\n    const { muteVolume, volume, updateProgressBarVolume } = this.props;\r\n\r\n    if (muteVolume > 0) {\r\n      updateProgressBarVolume(0);\r\n      this.setVolume(0);\r\n    } else {\r\n      updateProgressBarVolume(volume * 100);\r\n      this.setVolume(volume);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { muteVolume } = this.props;\r\n\r\n    return(\r\n      <VolumeBar\r\n        volume={ muteVolume }\r\n        onSetVolume={ this.handerMuteVolume }\r\n        onVolumeSwitch={ this.handlerMuteVolumeToggle }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ recordVolume }) => recordVolume;\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updatetVolume: payload => dispatch({ type: actionTypes.SET_PLAYER_VOLUME, payload }),\r\n    updateProgressBarVolume: payload => dispatch({ type: actionTypes.SET_PLAYER_MUTE_VOLUME, payload })\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps)(VolumeContainer);","import React from 'react';\r\n\r\nconst QueuePanel = ({ children }) => {\r\n  return(\r\n    <div className='player-queuelist'>\r\n      { children }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QueuePanel;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst QueueHead = props => {\r\n  const { onClose } = props;\r\n\r\n  return(\r\n    <div className='queuelist-head'>\r\n      <div className='queuelist-head-title'>Next up</div>\r\n      <div className='queuelist-close'>\r\n        <button \r\n          type='button' \r\n          className='svg-icon-btn tooltip' \r\n          aria-label=\"Close\"\r\n          data-tooltip='Close'\r\n          onClick={ onClose }\r\n        >\r\n          <svg className=\"svg-icon svg-icon-chevron-down\" focusable=\"false\" height=\"1em\" width=\"1em\" viewBox=\"0 0 12 12\" aria-hidden=\"true\"><path d=\"M6.013 8.998a.61.61 0 0 0 .416-.169l2.661-2.1 2.662-2.102c.654-.517-.12-1.498-.775-.981l-2.483 1.96-2.482 1.96-4.99-3.921c-.656-.515-1.428.468-.773.983L5.597 8.83a.61.61 0 0 0 .416.168z\"/></svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nQueueHead.propTypes = {\r\n  onClose: PropTypes.func\r\n}\r\n\r\nexport default QueueHead;","import React from 'react';\r\nimport Play from '../../buttons/button_play';\r\n\r\nconst Control = props => {\r\n  const { showId, id, onUpdateShowId, onSwitchControlPlaying } = props;\r\n\r\n  if (showId !== id) {\r\n    return(\r\n      <span className='play-hover'>\r\n        <Play onPlay={ () => {\r\n          onUpdateShowId(id);\r\n          return onSwitchControlPlaying();\r\n        }} />\r\n      </span>\r\n    )\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default Control;","import React from 'react';\r\nimport ControlPlay from './controlPlaying';\r\n\r\nconst QueueItem = props => {\r\n  const { \r\n    title,\r\n    author,\r\n    cover,\r\n    id,\r\n    onSwitchControlPlaying,\r\n    setRadioShowState,\r\n    playingShowId,\r\n    nowPlaying } = props;\r\n\r\n  return(\r\n    <div \r\n      className={ `cloudcast-item cloudcast-upnext ${ playingShowId === id ? 'now-playing' : '' }`.trim() }\r\n      >\r\n      <div className={ `cloudcast-upnext-image ${ playingShowId === id && nowPlaying ? 'is-active' : '' }`.trim() }>\r\n        <ControlPlay\r\n          showId={ playingShowId }\r\n          id={ id }\r\n          onUpdateShowId={ setRadioShowState }\r\n          onSwitchControlPlaying={ onSwitchControlPlaying }\r\n        />\r\n        <figure>\r\n          <img src={ cover } alt=\"\"/>\r\n          { playingShowId === id && nowPlaying ? <span className=\"equalizer equalizer-inverse\"></span> : null }\r\n        </figure>\r\n      </div>\r\n      <div className='cloudcast-upnext-details'>\r\n        <div className='cloudcast-name'>{ title }</div>\r\n        <div className='cloudcast-owner'>{ author }</div>\r\n        <div className=\"cloudcast-action\">\r\n          <button\r\n            type='button'\r\n            className='cloudcast-action-remove tooltip'\r\n            data-tooltip='Remove'\r\n            onClick={ () => props.setRemoveFromQueue(id) }\r\n          >\r\n            <svg className=\"svg-icon svg-icon-cancel\" focusable=\"false\" height=\"14\" width=\"14\" viewBox=\"0 0 12 12\" aria-hidden=\"true\"><path d=\"M1.75 10.25l8.5-8.5m.002 8.505L1.75 1.75\" fill=\"none\" fillRule=\"evenodd\" strokeLinecap=\"round\" strokeWidth=\"1.5\"/></svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QueueItem;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../../actions/actionTypes';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport QueuePanelView from './panel';\r\nimport QueueHead from './head';\r\nimport QueueItem from './item';\r\nimport './style.css';\r\n\r\nclass QueuePanelContainer extends Component {\r\n\r\n  static propTypes = {\r\n    nowPlaying: PropTypes.bool,\r\n    playingShowId: PropTypes.string,\r\n    onSwitchQueue: PropTypes.func,\r\n    dataQueue: PropTypes.array\r\n  }\r\n\r\n  getDataQueue = () => {\r\n    const { dataQueue, ...rest } = this.props;\r\n    \r\n    if (dataQueue.length) {\r\n      return(\r\n        dataQueue.map(item => (\r\n          <QueueItem\r\n            key={ item.id }\r\n            { ...item }\r\n            { ...rest }\r\n          />\r\n        ))\r\n      )\r\n    }\r\n\r\n    return(\r\n      <span className=\"up-next-learn\">\r\n        there is no show in line\r\n      </span>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { onSwitchQueue } = this.props;\r\n\r\n    return(\r\n      <QueuePanelView>\r\n        <QueueHead\r\n          onClose={ onSwitchQueue }\r\n        />\r\n        <Scrollbars\r\n          style={{ height: 'calc(100% - 65px)' }}\r\n          renderThumbVertical={props => <div {...props} className=\"thumb-vertical\"/>}\r\n        >\r\n          <div className='queuelist-content'>\r\n            { this.getDataQueue() }\r\n          </div>\r\n        </Scrollbars>\r\n      </QueuePanelView>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({radioShowsQueue, radioShowState, recordsPlayer}) => {\r\n  const { nowPlaying } = recordsPlayer;\r\n  const { playingShowId } = radioShowState;\r\n  const { dataQueue } = radioShowsQueue;\r\n\r\n  return {\r\n    nowPlaying,\r\n    playingShowId,\r\n    dataQueue,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setRadioShowState: payload => dispatch({ type: actionTypes.SET_REDIO_SHOW_STATE, payload }),\r\n    setRemoveFromQueue: payload => dispatch({ type: actionTypes.SET_REMOVE_FROM_QUEUE, payload })\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps)(QueuePanelContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '../../buttons/button';\r\nimport './style.css';\r\n\r\nconst Queue = props => {\r\n  const { onSwitchQueue } = props;\r\n\r\n  return(\r\n    <>\r\n      <Button\r\n        type='button'\r\n        className='svg-icon-btn queuelist tooltip'\r\n        data-tooltip='Queue'\r\n        onClick={ onSwitchQueue }\r\n      >\r\n        <svg className='svg-icon icon-queue' height=\"18\" viewBox=\"0 0 18 18\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path d=\"M.867.109C.387-.144 0 .059 0 .565v4.87c0 .503.39.71.867.457L4.643 3.46c.476-.252.476-.663 0-.916z\"></path>\r\n            <g strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\">\r\n              <path d=\"M1 17h16M10 3h7M1 10h16\"/>\r\n            </g>\r\n          </g>\r\n        </svg>\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nQueue.propTypes = {\r\n  onSwitchQueue: PropTypes.func\r\n}\r\n\r\nexport default Queue;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Queue from '../queue/queue';\r\n\r\nconst Nextup = props => {\r\n  const { switchQueue, onSwitchQueue } = props;\r\n\r\n  return(\r\n    <ul className='player-options'>\r\n      <li className='player-options-item'>\r\n        <Queue\r\n          switchQueue={ switchQueue }\r\n          onSwitchQueue={ onSwitchQueue }\r\n        />\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nNextup.propTypes = {\r\n  switchQueue: PropTypes.bool,\r\n  onSwitchQueue: PropTypes.func\r\n}\r\n\r\nexport default Nextup;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../../actions/actionTypes';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport QueuePanel from '../queue-panel/panel_container';\r\nimport Nextup from './next_up';\r\n\r\nclass NextupContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.setTheShowToQueue(this.props.playlist);\r\n  }\r\n\r\n  handlerSwitchQueue = () => {\r\n    this.props.setVisibilityPanel();\r\n  }\r\n\r\n  render() {\r\n    const { isOpenQueue } = this.props;\r\n    const { onSwitchControlPlaying } = this.props;\r\n    \r\n    return(\r\n      <>\r\n        <Nextup\r\n          switchQueue={ isOpenQueue }\r\n          onSwitchQueue={ this.handlerSwitchQueue }\r\n        />\r\n        <CSSTransition\r\n          in={ isOpenQueue }\r\n          timeout={ 350 }\r\n          classNames='queue'\r\n          unmountOnExit\r\n        >\r\n          <QueuePanel \r\n            { ...this.props } \r\n            onSwitchQueue={ this.handlerSwitchQueue }\r\n            onSwitchControlPlaying={ onSwitchControlPlaying }\r\n          />\r\n        </CSSTransition>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ radioShowsQueue }) => {\r\n  const { isOpenQueue } = radioShowsQueue;\r\n\r\n  return {\r\n    isOpenQueue\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setTheShowToQueue: payload => dispatch({ type: actionTypes.SET_PLAYER_QUEUE_SHOW, payload }),\r\n    setVisibilityPanel: () => dispatch({ type: actionTypes.SET_VISIBILITY_QUEUE_PANEL })\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps)(NextupContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Controls from '../controls/controls_container';\r\nimport Actions from '../actions/actions';\r\nimport Clodcast from '../clodcast/clodcast_container';\r\nimport TimeLine from '../time/time_line';\r\nimport Volume from '../volume/volume_container';\r\nimport Nextup from '../nextup/next_up_container';\r\n\r\nconst Player = props => {\r\n  const {\r\n    onSwitchControlPlaying,\r\n    onSeekForward,\r\n    onSeekBack,\r\n    onUpdateProgress,\r\n    onSetProgress,\r\n    onClearInterval,\r\n    onUpdateData,\r\n    onUpdateAudioTime,\r\n    ...rest\r\n  } = props;\r\n\r\n  return(\r\n    <>\r\n      <div className='player' data-theme={ props.changeMode ? 'dark' : null }>\r\n        <div className='react-container'>\r\n          <Controls\r\n            onSwitchControlPlaying={ onSwitchControlPlaying }\r\n            onSeekForward={ onSeekForward }\r\n            onSeekBack={ onSeekBack }\r\n            onUpdateAudioTime={ onUpdateAudioTime }\r\n          />\r\n          <Clodcast\r\n            { ...rest }\r\n            getData={ (data, setClodcastDetails) => (\r\n              onUpdateData(data).then(({ title:show, author, cover }) => {\r\n                setClodcastDetails({\r\n                  show,\r\n                  author,\r\n                  cover\r\n                });\r\n              })\r\n            )}\r\n          />\r\n          <Actions/>\r\n          <div className='player-track'>\r\n            <TimeLine\r\n              onUpdateProgress={ onUpdateProgress }\r\n              onSetProgress={ onSetProgress }\r\n              onClearInterval={ onClearInterval }\r\n            />\r\n          </div>\r\n          <Volume/>\r\n          <Nextup\r\n            onSwitchControlPlaying={ onSwitchControlPlaying }\r\n            { ...rest }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nPlayer.propTypes = {\r\n  playing: PropTypes.bool,\r\n  onSwitchControlPlaying: PropTypes.func,\r\n  onSeekForward: PropTypes.func,\r\n  onSeekBack: PropTypes.func,\r\n  onSetProgress: PropTypes.func\r\n}\r\n\r\nexport default Player;","import React, { Component as ReactComponent } from 'react';\r\nimport { AudioContext } from '../player/audio/context';\r\n\r\nconst HocApp = Component => {\r\n  return class extends ReactComponent {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.audioElement = document.createElement('audio');\r\n      this.nextPlay = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.audioElement.addEventListener('play', this.handlerPlay);\r\n      this.audioElement.addEventListener('pause', this.handlerPause);\r\n      this.audioElement.addEventListener('canplay', this.handlerCanPlay);\r\n      this.audioElement.addEventListener('loadedmetadata', this.loadData);\r\n\r\n      this.loadSrc();\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      this.audioElement.removeEventListener('play', this.handlerPlay);\r\n      this.audioElement.removeEventListener('canplay', this.handlerCanPlay);\r\n      this.audioElement.removeEventListener('pause', this.handlerPause);\r\n      this.audioElement.removeEventListener('loadedmetadata', this.loadData);\r\n  \r\n      this.audioElement = null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      const { playingShowId } = this.props;\r\n      const { currentTime, duration } = this.audioElement;\r\n\r\n      if (playingShowId !== prevProps.playingShowId && prevProps.playingShowId) {\r\n        this.nextPlay = true;\r\n\r\n        this.nextShow(this.nextPlay);\r\n      }\r\n\r\n      if (currentTime === duration && !this.nextPlay) {\r\n        // eslint-disable-next-line\r\n        const a = this.props.playlist.findIndex(item => {\r\n          if (item.id === playingShowId) {\r\n            return item;\r\n          }\r\n        });\r\n\r\n        if (a < this.props.playlist.length-1) {\r\n          this.props.setRadioShowState(this.props.playlist[a+1].id);\r\n        }\r\n      }\r\n    }\r\n  \r\n    handlerSwitchControlPlaying = () => {\r\n      if (!this.audioElement.src.length) {\r\n        return;\r\n      }\r\n\r\n      if (this.props.nowPlaying) {\r\n        this.audioElement.pause();\r\n      } else {\r\n        this.audioElement.play();\r\n      }\r\n    }\r\n\r\n    loadData = () => {\r\n      this.props.setLoading();\r\n    }\r\n  \r\n    updateProgress = () => {\r\n      const { setAudioProgress } = this.props;\r\n      this.intervalId = setInterval(() => {\r\n        setAudioProgress(this.audioElement.currentTime);\r\n      }, 900);\r\n    }\r\n  \r\n    handlerPlay = () => {\r\n      const { setAudioPlaying } = this.props;\r\n  \r\n      setAudioPlaying(true);\r\n      this.updateProgress();\r\n    }\r\n  \r\n    handlerPause = () => {\r\n      const { setAudioPlaying } = this.props;\r\n  \r\n      setAudioPlaying(false);\r\n      this.clearInterval();\r\n    }\r\n  \r\n    handlerCanPlay = () => {\r\n      const { setAudioDuration } = this.props;\r\n      \r\n      setAudioDuration(this.audioElement.duration);\r\n    }\r\n  \r\n    setProgress = ({holding, translate, barWidth}) => {\r\n      const { setAudioProgress, duration } = this.props;\r\n      const progress = ((translate / barWidth) * duration).toFixed(6);\r\n\r\n      if (holding) {\r\n        setAudioProgress(parseFloat(progress));\r\n      }\r\n    }\r\n  \r\n    updateAudioCurrentTime = time => {\r\n      const { setAudioProgress } = this.props;\r\n      const progress = this.audioElement.currentTime = time;\r\n  \r\n      setAudioProgress(progress);\r\n    }\r\n\r\n    loadSrc = () => {\r\n      this.audioElement.src = this.props.playlist[0].podcast;\r\n      this.audioElement.load();\r\n      this.props.setLoading();\r\n    }\r\n  \r\n    nextShow = (nextPlay = false) => {\r\n      this.getData(this.props.playingShowId)\r\n      .then(({ podcast }) => {\r\n        this.audioElement.src = podcast;\r\n        this.audioElement.load();\r\n\r\n        if (nextPlay) {\r\n          this.clearInterval();\r\n          this.audioElement.play();\r\n          this.nextPlay = false;\r\n        }\r\n      })\r\n      .finally(() => {\r\n        this.props.setLoading();\r\n      });\r\n    }\r\n\r\n    getData = playingShowId => {\r\n      // eslint-disable-next-line\r\n      const dataItem = this.props.playlist.filter(item => {\r\n        if (item.id === playingShowId) {\r\n          return item;\r\n        }\r\n      })\r\n  \r\n      return Promise.resolve(...dataItem);\r\n    }\r\n  \r\n    clearInterval = () => {\r\n      if (this.intervalId !== null) {\r\n        clearInterval(this.intervalId);\r\n        this.intervalId = null;\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AudioContext.Provider \r\n          value={{\r\n            audio: this.audioElement\r\n          }}\r\n        >\r\n          <Component\r\n            { ...this.props }\r\n            onSetProgress={ this.setProgress }\r\n            onClearInterval={ this.clearInterval }\r\n            onUpdateProgress={ this.updateProgress }\r\n            onSwitchControlPlaying={ this.handlerSwitchControlPlaying }\r\n            onUpdateAudioTime={ this.updateAudioCurrentTime }\r\n            onUpdateData={ this.getData }\r\n          />\r\n        </AudioContext.Provider>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default HocApp;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../../../actions/actionTypes';\r\nimport Player from '../player/player';\r\nimport HocComponent from '../../hoc/with_data';\r\n\r\nimport '../style.css';\r\n\r\nconst Audio = props => {\r\n  return(\r\n    <Player\r\n      { ...props }\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ recordsPlayer, radioShowState, mode }) => {\r\n  const { playingShowId } = radioShowState;\r\n  const { changeMode } = mode;\r\n\r\n  return {\r\n    ...recordsPlayer,\r\n    playingShowId,\r\n    changeMode\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setAudioPlaying: payload => dispatch({ type: actionTypes.SET_PLAYER_PLAYING, payload }),\r\n    setAudioProgress: payload => dispatch({ type: actionTypes.SET_PLAYER_PROGRESS, payload }),\r\n    setAudioDuration: payload => dispatch({ type: actionTypes.SET_PLAYER_DURATION, payload }),\r\n    setRadioShowState: payload => dispatch({ type: actionTypes.SET_REDIO_SHOW_STATE, payload }),\r\n    setLoading: () => dispatch({ type: actionTypes.SET_LOADING })\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HocComponent(Audio));","import React from 'react';\r\nimport Audio from '../player/audio/audio';\r\nimport { feed } from '../../songs/playlist.json';\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n  return(\r\n    <main className='content react-container'>\r\n      <Audio\r\n        playlist={ feed }\r\n      />\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport './index.css';\nimport App from './components/app/app';\n\nrender(\n  <Provider store={ store }>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}